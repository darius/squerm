(define (main)
  (sprout-spawn #f main-process))

(define (main-process ? !)
  (let ((sub! (sprout-spawn #f subprocess)))
    (sub! `(hello ,!))
    (print `(main-got-back ,(?)))))

(define (subprocess ? !)
  (let ((msg (?)))
    (print `(sub-got ,(car msg)))
    ((cadr msg) 'reply)))

(define (sprout-spawn keeper fn)
  (mcase (sprout)
    ((initial-? initial-!)
     (spawn keeper (lambda ()
                     (mcase (sprout)
                       ((? !)
                        (initial-! !)
                        (fn ? !)))))
     (initial-?))))
