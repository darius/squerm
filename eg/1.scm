(define (main)
  (sprout-spawn #f main-process))

(define (main-process ? !)
  (let ((sub! (sprout-spawn #f subprocess)))
    (sub! (list 'hello !))
    (print (list 'main-got-back (?)))))

(define (subprocess ? !)
  (let ((msg (?)))
    (print (list 'sub-got (car msg)))
    ((cadr msg) 'reply)))

(define (sprout-spawn keeper fn)
  (let ((pair (sprout)))
    (let ((initial-? (car pair))
          (initial-! (cadr pair)))
      (spawn keeper (lambda ()
                      (let ((pair (sprout)))
                        (let ((? (car pair))
                              (! (cadr pair)))
                          (initial-! !)
                          (fn ? !)))))
      (initial-?))))
